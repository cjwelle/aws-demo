{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Cloudformation Infrastructure Template. Prod & DevOps VPC Cloudformation Version 0.7",

  "Mappings" : {

    "Tagging" : {
      "CostCenter"  : { "Name" : "OPS"},
      "Theater"     : { "Name" : "ops-prod"}
    },

    "VPCInfo" : {
      "DOVPCName"         : { "Name" : "DevOpsVPC"},
      "DOVPCShortName"    : { "Name" : "do" },
      "PRDVPCName"        : { "Name" : "ProdVPC"},
      "PRDVPCShortName"   : { "Name" : "prod" },

      "keypair"           : { "kp1" : "nat-4048-20150510"},

      "AZ1"               : { "AZ" : "a" },
      "AZ2"               : { "AZ" : "b" },

      "Internet"          : { "CIDR" : "0.0.0.0/0" },

      "DOVPC"             : { "CIDR" : "172.100.1.0/24" },
      "DOPubSubnet1"      : { "CIDR" : "172.100.1.0/26" },
      "DOPubSubnet2"      : { "CIDR" : "172.100.1.64/26" },
      "DOPrivSubnet1"     : { "CIDR" : "172.100.1.128/26" },
      "DOPrivSubnet2"     : { "CIDR" : "172.100.1.192/26" },

      "PRDVPC"            : { "CIDR" : "10.83.0.0/16" },
      "PRDPubSubnet1"     : { "CIDR" : "10.83.0.0/25" },
      "PRDPubSubnet2"     : { "CIDR" : "10.83.0.128/25" },
      "PRDAppSubnet1"     : { "CIDR" : "10.83.1.0/24" },
      "PRDAppSubnet2"     : { "CIDR" : "10.83.2.0/24" },
      "PRDPrivSubnet1"   : { "CIDR" : "10.83.3.0/24" },
      "PRDPrivSubnet2"   : { "CIDR" : "10.83.4.0/24" },

      "PRDEastVPC"        :  { "CIDR" : "10.65.0.0/16" },
      "PRDEastApp1"       :  { "CIDR" : "10.65.1.0/23" },

      "INTDomainName"     : { "Name": "cc-net.local" },
      "PRDDomainName"     : { "Name": "crankyclouds.net" },
      "PRDHostedZneID"    : { "Name": "Z15IIJY1UNW0A6" }

    },

    "CorpIPs" : {
      "ip1" : { "CIDR" : "74.95.202.237/32" }
    },

    "RegionShortName" : {
      "us-east-1"      : { "Name" : "use1" },
      "us-west-2"      : { "Name" : "usw2" },
      "us-west-1"      : { "Name" : "usw1" },
      "eu-west-1"      : { "Name" : "euw1" },
      "ap-southeast-1" : { "Name" : "aps1" },
      "ap-southeast-2" : { "Name" : "aps2" },
      "ap-northeast-1" : { "Name" : "apn1" },
      "ap-northeast-2" : { "Name" : "apn2" },
      "sa-east-1"      : { "Name" : "sae1" },
      "eu-central-1"   : { "Name" : "euc1" }
    },

    "AWSBASEAMI" : {
      "us-east-1"      : { "AMI" : "" },
      "us-west-2"      : { "AMI" : "" },
      "us-west-1"      : { "AMI" : "" },
      "eu-west-1"      : { "AMI" : "" },
      "ap-southeast-1" : { "AMI" : "" },
      "ap-southeast-2" : { "AMI" : "" },
      "ap-northeast-1" : { "AMI" : "" },
      "sa-east-1"      : { "AMI" : "" }
    },

    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    }
  },

  "Resources" : {

    "PRDVPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock"           : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "EnableDnsSupport"    : "true",
        "EnableDnsHostnames"  : "true",
        "Tags" : [
          { "Key"   : "Name", "Value"   : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCName", "Name" ]}},
          { "Key"   : "Network", "Value" : "Public" },
          { "Key"   : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key"   : "Stack", "Value"  : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key"   : "Acct", "Value"   : { "Ref" : "AWS::AccountId" }}
        ]
      }
    },

    "PRDSGDefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "PRDVPC"
        },
        "SecurityGroupIngress": [
          {
          "IpProtocol": "-1",
          "CidrIp": { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]}
          },
          {
          "IpProtocol": "-1",
          "CidrIp": { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]}
          },
        ],
        "SecurityGroupEgress": [
          {
          "IpProtocol"  : "-1",
          "CidrIp"      : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]}
          }
        ],
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-default-sg"]]} },
          { "Key"   : "Stack", "Value"  : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value": { "Ref" : "AWS::StackId"} }
        ]
      }
    },

    "PRDVCCorpSSHsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Corp IP HTTPS-SSH Allow",
        "VpcId": {
          "Ref": "PRDVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Fn::FindInMap" : [ "CorpIPs", "ip1", "CIDR" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Fn::FindInMap" : [ "CorpIPs", "ip1", "CIDR" ]}
          }
        ],
        "SecurityGroupEgress": [
          {
          "IpProtocol": "-1",
          "CidrIp": { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]}
          }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-pc-corp-ssh-sg"]]} },
          { "Key"   : "Stack", "Value": { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key": "Application", "Value": { "Ref" : "AWS::StackId"} }
        ]
      }
    },

    "PRDInternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key"   : "Name", "Value" : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-igw"]]}},
          { "Key"   : "Stack", "Value": { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key"   : "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key"   : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key"   : "Network", "Value" : "Public" }
        ]
      }
    },

    "PRDGatewayToInternet" : {
       "Type"       : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId"              : { "Ref" : "PRDVPC" },
         "InternetGatewayId"  : { "Ref" : "PRDInternetGateway" }
       }
    },

    "PRDEndpoint" : {
        "Type"  :  "AWS::EC2::VPCEndpoint",
        "Properties" : {
          "PolicyDocument" : {"Version":"2012-10-17",
              "Statement":[{
                "Effect":"Allow",
                "Principal": "*",
                "Action": "*",
                "Resource": "*"
              }]
          },
          "RouteTableIds" : [ {"Ref" : "PRDPubExtRouteTable1"}, {"Ref" : "PRDPubExtRouteTable2"}, {"Ref" : "PRDIntRouteTable1"}, {"Ref" : "PRDIntRouteTable2"} ],
          "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
          "VpcId" : {"Ref" : "PRDVPC"}
            }
    },

    "PRDNATAZ1" : {
      "DependsOn" : "PRDPubExtRoute1",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["PRDNATEIPAZ1", "AllocationId"]},
        "SubnetId" : { "Ref" : "PRDPubSubnet1"}
      }
    },

    "PRDNATEIPAZ1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "PRDNATAZ2" : {
      "DependsOn" : "PRDPubExtRoute2",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["PRDNATEIPAZ2", "AllocationId"]},
        "SubnetId" : { "Ref" : "PRDPubSubnet2"}
      }
    },

    "PRDNATEIPAZ2" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "PRDPubNetworkAcl" : {
      "Type"        : "AWS::EC2::NetworkAcl",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-Pub-acl"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Pub" }
        ]
      }
    },

    "PRDInboundNTPPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "160",
        "Protocol"        : "17",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "123", "To" : "123" }
      }
    },

    "PRDInbound6050PubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "170",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "PortRange"       : { "From" : "80", "To" : "80" }
      }
    },

    "PRDInBoundHTTPSPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "200",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "PortRange"       : { "From" : "443", "To" : "443" }
      }
    },

    "PRDInboundEmphemeralPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "300",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "1024", "To" : "65535" }
      }
    },

    "PRDInboundPingPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "400",
        "Protocol"        : "1",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "Icmp"            : { "Code" : "-1", "Type" : "-1" },
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]}
      }
    },

    "PRDOutBoundNTPPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "160",
        "Protocol"        : "17",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "123", "To" : "123" }
      }
    },

    "PRDOutBoundInternetPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "200",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDOutBound9443PubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "300",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "9443", "To" : "9443" }
      }
    },

    "PRDOutBoundHTTPSPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "301",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "443", "To" : "443" }
      }
    },

   "PRDOutBound6379PubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "302",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "PortRange"       : { "From" : "80", "To" : "80" }
      }
    },

    "PRDOutboundPingPubNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "400",
        "Protocol"        : "1",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "Icmp"            : { "Code" : "-1", "Type" : "-1" },
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]}
      }
    },


    "PRDServiceNetworkAcl" : {
      "Type"        : "AWS::EC2::NetworkAcl",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-service-acl"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Pub" }
        ]
      }
    },

    "PRDInboundALLTCPApp1ServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "150",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet1", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDInboundALLTCPApp2ServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "151",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet2", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDInboundNTPServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "160",
        "Protocol"        : "17",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "123", "To" : "123" }
      }
    },

    "PRDInbound23013ServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "170",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet1", "CIDR" ]},
        "PortRange"       : { "From" : "23013", "To" : "23013" }
      }
    },


    "PRDOutBoundALLTCPApp1ServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "150",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet1", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDOutBoundALLTCPApp2ServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "151",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet2", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDOutBoundNTPServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "160",
        "Protocol"        : "17",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "123", "To" : "123" }
      }
    },

    "PRDOutBound23013ServiceNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "170",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet1", "CIDR" ]},
        "PortRange"       : { "From" : "23013", "To" : "23013" }
      }
    },

    "PRDServiceNetworkAcl1Association" : {
      "Type"        : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDAppSubnet1" },
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" }
      }
    },

    "PRDServiceNetworkAcl2Association" : {
      "Type"        : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDAppSubnet2" },
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" }
      }
    },

    "PRDPrivNetworkAcl" : {
      "Type"        : "AWS::EC2::NetworkAcl",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-Priv-acl"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Pub" }
        ]
      }
    },


    "PRDInboundALLTCPApp1PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "150",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet1", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDInboundALLTCPApp2PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "151",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet2", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDInboundALLTCPUSEPrdPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "152",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDEastApp1", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDInboundNTPPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "160",
        "Protocol"        : "17",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "123", "To" : "123" }
      }
    },

    "PRDInbound6050PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "170",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "6050", "To" : "6050" }
      }
    },

    "PRDInbound9443PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "300",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "9443", "To" : "9443" }
      }
    },

    "PRDInboundHTTPSPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "301",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "443", "To" : "443" }
      }
    },

    "PRDInbound6379PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "302",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "6379", "To" : "6379" }
      }
    },

    "PRDOutBoundALLTCPApp1PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "150",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet1", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDOutBoundALLTCPApp2PrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "151",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet2", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDOutboundALLTCPUSEPrdPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "152",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDEastApp1", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "PRDOutBoundNTPPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "160",
        "Protocol"        : "17",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "123", "To" : "123" }
      }
    },

    "PRDOutBoundEphemeralPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "300",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "PortRange"       : { "From" : "1024", "To" : "65535" }
      }
    },

    "PRDOutBoundEphemeralUSEPrdVPCPrivNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "301",
        "Protocol"        : "6",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "PRDEastVPC", "CIDR" ]},
        "PortRange"       : { "From" : "1024", "To" : "65535" }
      }
    },

    "PRDPrivNetworkAcl1Association" : {
      "Type"        : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDPrivSubnet1" },
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" }
      }
    },

    "PRDPrivNetworkAcl2Association" : {
      "Type"        : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDPrivSubnet2" },
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" }
      }
    },

    "PRDPubExtRouteTable1" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-PubExt-rtb1"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Public" }
        ]
      }
    },

    "PRDPubExtRoute1" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "PRDGatewayToInternet",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDPubExtRouteTable1" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "GatewayId"             : { "Ref" : "PRDInternetGateway" }
      }
    },


    "PRDPubExtRouteTable2" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-PubExt-rtb2"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Public" }
        ]
      }
    },

    "PRDPubExtRoute2" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "PRDGatewayToInternet",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDPubExtRouteTable2" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "GatewayId"             : { "Ref" : "PRDInternetGateway" }
      }
    },


    "PRDIntRouteTable1" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-Int-rtb1"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Public" }
        ]
      }
    },



    "PRDIntRouteTable2" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-Int-rtb2"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Public" }
        ]
      }
    },


    "PRDPrivSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDPrivSubnet1" },
        "RouteTableId"  : { "Ref" : "PRDIntRouteTable1" }
      }
    },

    "PRDPrivSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDPrivSubnet2" },
        "RouteTableId"  : { "Ref" : "PRDIntRouteTable2" }
      }
    },


    "PRDAppSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDAppSubnet1" },
        "RouteTableId"  : { "Ref" : "PRDIntRouteTable1" }
      }
    },

    "PRDAppSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDAppSubnet2" },
        "RouteTableId"  : { "Ref" : "PRDIntRouteTable2" }
      }
    },

    "PRDPubSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDPubSubnet1" },
        "RouteTableId"  : { "Ref" : "PRDPubExtRouteTable1" }
      }
    },

    "PRDPubSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "PRDPubSubnet2" },
        "RouteTableId"  : { "Ref" : "PRDPubExtRouteTable2" }
      }
    },

    "PRDAppSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "PRDVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ1", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-app-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PRDAppSubnet1" }
        ]
      }
    },

    "PRDAppSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "PRDVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ2", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet2", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-app-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PRDAppSubnet2" }
        ]
      }
    },

    "PRDPrivSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "PRDVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ1", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-Priv-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PRDPrivSubnet1" }
        ]
      }
    },

    "PRDPrivSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "PRDVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ2", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet2", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-Priv-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PRDPrivSubnet2" }
        ]
      }
    },

    "PRDPubSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "PRDVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ1", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "PRDPubSubnet1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-pub-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PRDPubSubnet1" }
        ]
      }
    },

    "PRDPubSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "PRDVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "PRDVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ2", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "PRDPubSubnet2", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]}, "-pub-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "PRDPubSubnet2" }
        ]
      }
    },

    "DOVPC" : {
        "Type" : "AWS::EC2::VPC",
        "Properties" : {
          "CidrBlock"           : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
          "EnableDnsSupport"    : "true",
          "EnableDnsHostnames"  : "true",
          "Tags" : [
            { "Key"   : "Name", "Value"   : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCName", "Name" ]}},
            { "Key"   : "Network", "Value" : "Public" },
            { "Key"   : "Application", "Value" : { "Ref" : "AWS::StackId" } },
            { "Key"   : "Stack", "Value"  : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
            { "Key"   : "Acct", "Value"   : { "Ref" : "AWS::AccountId" }}
          ]
        }
      },

    "DOSGDefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "DOVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "CidrIp": { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]}
          }
        ],
        "Tags": [
          { "Key" : "Name", "Value": { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-default-sg"]]} },
          { "Key"   : "Stack", "Value"  : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value": { "Ref" : "AWS::StackId"} }
        ]
      }
    },

    "DOVCCorpSSHsg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Corp IP HTTPS-SSH Allow",
        "VpcId": {
          "Ref": "DOVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Fn::FindInMap" : [ "CorpIPs", "ip1", "CIDR" ]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Fn::FindInMap" : [ "CorpIPs", "ip1", "CIDR" ]}
          }
        ],
        "SecurityGroupEgress": [
          {
          "IpProtocol": "-1",
          "CidrIp": { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]}
          }
        ],
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-pc-corp-ssh-sg"]]} },
          { "Key"   : "Stack", "Value": { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key": "Application", "Value": { "Ref" : "AWS::StackId"} }
        ]
      }
    },

    "DOInternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key"   : "Name", "Value" : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-igw"]]}},
          { "Key"   : "Stack", "Value": { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key"   : "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key"   : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key"   : "Network", "Value" : "Public" }
        ]
      }
    },

    "DOGatewayToInternet" : {
       "Type"       : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId"              : { "Ref" : "DOVPC" },
         "InternetGatewayId"  : { "Ref" : "DOInternetGateway" }
       }
    },

    "DOPublicRouteTable" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "DOVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-pub-rtb"]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value"  : "Public" }
        ]
      }
    },

    "DONATAZ1" : {
      "DependsOn" : "DOPublicRouteTable",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["DONATEIPAZ1", "AllocationId"]},
        "SubnetId" : { "Ref" : "DOPubSubnet1"}
      }
    },

    "DONATEIPAZ1" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

    "DONATAZ2" : {
      "DependsOn" : "DOPublicRouteTable",
      "Type" : "AWS::EC2::NatGateway",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["DONATEIPAZ2", "AllocationId"]},
        "SubnetId" : { "Ref" : "DOPubSubnet2"}
      }
    },

    "DONATEIPAZ2" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },

     "DOPublicRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOGatewayToInternet",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "DOPublicRouteTable" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "GatewayId"             : { "Ref" : "DOInternetGateway" }
      }
    },

    "DOEndpoint" : {
      "Type"  :  "AWS::EC2::VPCEndpoint",
      "Properties" : {
        "PolicyDocument" : {"Version":"2012-10-17",
            "Statement":[{
              "Effect":"Allow",
              "Principal": "*",
              "Action": "*",
              "Resource": "*"
            }]
        },
        "RouteTableIds" : [ {"Ref" : "DOPublicRouteTable"}, {"Ref" : "DOPrivateRouteTableAZ1"},{"Ref" : "DOPrivateRouteTableAZ2"} ],
        "ServiceName" : { "Fn::Join": [ "", [ "com.amazonaws.", { "Ref": "AWS::Region" }, ".s3" ] ] },
        "VpcId" : {"Ref" : "DOVPC"}
          }
    },

    "DOPubSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "DOVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "DOVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ1", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "DOPubSubnet1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-default-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "DOPubIntSubnet1" }
        ]
      }
    },

    "DOPubSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "DOVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "DOVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ2", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "DOPubSubnet2", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-default-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackId" } },
          { "Key" : "Network", "Value" : "DOPubIntSubnet2" }
        ]
      }
    },

    "DOPrivateRouteTableAZ1" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "DOVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-priv-rtb", ""]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value"  : "Private" },
          { "Key" : "Theater", "Value" :  { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]} }
        ]
      }
    },

    "DOPrivateRouteTableAZ2" : {
      "Type"        : "AWS::EC2::RouteTable",
      "Properties"  : {
        "VpcId" : { "Ref" : "DOVPC" },
        "Tags"  : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-priv2-rtb", ""]]}},
         { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key" : "Acct", "Value"     : { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value"  : "Private" },
          { "Key" : "Theater", "Value" :  { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]} }
        ]
      }
    },


    "DOPrivateRouteAZ1" : {
      "DependsOn" : "DONATAZ1",
      "Type"        : "AWS::EC2::Route",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "DOPrivateRouteTableAZ1" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "NatGatewayId"             : { "Ref" : "DONATAZ1" }
      }
    },

    "DOPrivateRouteAZ2" : {
      "DependsOn" : "DONATAZ2",
      "Type"        : "AWS::EC2::Route",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "DOPrivateRouteTableAZ2" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "NatGatewayId"             : { "Ref" : "DONATAZ2" }
      }
    },

    "DOPrivSubnet1" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "DOVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "DOVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ1", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "DOPrivSubnet1", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-priv-sub1"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "DOPrivSubnet1" },
          { "Key" : "Theater", "Value" :  { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]} }
        ]
      }
    },

    "DOPrivSubnet2" : {
      "Type" : "AWS::EC2::Subnet",
      "DependsOn" : "DOVPC",
      "Properties" : {
        "VpcId" : { "Ref" : "DOVPC" },
        "AvailabilityZone" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"}, { "Fn::FindInMap" : [ "VPCInfo", "AZ2", "AZ" ]}]]},
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCInfo", "DOPrivSubnet2", "CIDR" ]},
        "Tags" : [
          { "Key" : "Name", "Value"     : { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]}, "-priv-sub2"]]}},
          { "Key"  : "Stack", "Value"    : { "Fn::FindInMap" : [ "VPCInfo", "DOVPCShortName", "Name" ]} },
          { "Key": "Acct", "Value": { "Ref" : "AWS::AccountId" } },
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "DOPrivSubnet2" },
          { "Key" : "Theater", "Value" :  { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]} }
        ]
      }
    },

    "DOPubSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "DOPubSubnet1" },
        "RouteTableId"  : { "Ref" : "DOPublicRouteTable" }
      }
    },

    "DOPubSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "DOPubSubnet2" },
        "RouteTableId"  : { "Ref" : "DOPublicRouteTable" }
      }
    },


    "DOPrivSubnet1RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "DOPrivSubnet1" },
        "RouteTableId"  : { "Ref" : "DOPrivateRouteTableAZ1" }
      }
    },

    "DOPrivSubnet2RouteTableAssociation" : {
      "Type"        : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties"  : {
        "SubnetId"      : { "Ref" : "DOPrivSubnet2" },
        "RouteTableId"  : { "Ref" : "DOPrivateRouteTableAZ2" }
      }
    },

    "DOPRDPeering": {
    "Type": "AWS::EC2::VPCPeeringConnection",
    "Properties": {
      "Tags": [ {"Key": "Name", "Value": "PRD-DO Peering" }],
      "VpcId": { "Ref" : "PRDVPC" },
      "PeerVpcId": { "Ref" : "DOVPC" }
      }
    },

    "DOprdtoPRDVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "DOPublicRouteTable" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "VpcPeeringConnectionId"             : { "Ref" : "DOPRDPeering" }
      }
    },

    "DOpriv1toPRDVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "DOPrivateRouteTableAZ1" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "VpcPeeringConnectionId"             : { "Ref" : "DOPRDPeering" }
      }
    },

    "DOpriv2toPRDVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "DOPrivateRouteTableAZ2" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "PRDVPC", "CIDR" ]},
        "VpcPeeringConnectionId"             : { "Ref" : "DOPRDPeering" }
      }
    },

    "PRDExt1toDOVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDPubExtRouteTable1" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "VpcPeeringConnectionId"           : { "Ref" : "DOPRDPeering" }
      }
    },

    "PRDExt2toDOVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDPubExtRouteTable2" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "VpcPeeringConnectionId"            : { "Ref" : "DOPRDPeering" }
      }
    },

    "PRDInt1toDOVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDIntRouteTable1" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "VpcPeeringConnectionId"             : { "Ref" : "DOPRDPeering" }
      }
    },

    "PRDInt2toDOVPCRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "DOPRDPeering",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDIntRouteTable2" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "VpcPeeringConnectionId"             : { "Ref" : "DOPRDPeering" }
      }
    },

    "PRDInt1toInternetRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "PRDNATAZ1",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDIntRouteTable1" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "NatGatewayId"             : { "Ref" : "PRDNATAZ1" }
      }
    },

    "PRDInt2toInternetRoute" : {
      "Type"        : "AWS::EC2::Route",
      "DependsOn"   : "PRDNATAZ2",
      "Properties"  : {
        "RouteTableId"          : { "Ref" : "PRDIntRouteTable2" },
        "DestinationCidrBlock"  : { "Fn::FindInMap" : [ "VPCInfo", "Internet", "CIDR" ]},
        "NatGatewayId"             : { "Ref" : "PRDNATAZ2" }
      }

    },

    "DOInBoundtoPrdPrivVPCNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "900",
        "Protocol"        : "-1",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
        }
    },

    "DOOutBoundtoPrdPrivVPCNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPrivNetworkAcl" },
        "RuleNumber"      : "900",
        "Protocol"        : "-1",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "DOInBoundtoPrdServiceVPCNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "900",
        "Protocol"        : "-1",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "DOOutBoundtoPrdServiceVPCNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDServiceNetworkAcl" },
        "RuleNumber"      : "900",
        "Protocol"        : "-1",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "DOInBoundtoPrdPubVPCNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "900",
        "Protocol"        : "-1",
        "RuleAction"      : "allow",
        "Egress"          : "false",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "DOOutBoundtoPrdPubVPCNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties"        : {
        "NetworkAclId"    : { "Ref" : "PRDPubNetworkAcl" },
        "RuleNumber"      : "900",
        "Protocol"        : "-1",
        "RuleAction"      : "allow",
        "Egress"          : "true",
        "CidrBlock"       : { "Fn::FindInMap" : [ "VPCInfo", "DOVPC", "CIDR" ]},
        "PortRange"       : { "From" : "0", "To" : "65535" }
      }
    },

    "EC2DefaultRole": {
           "Type": "AWS::IAM::Role",
           "Properties": {
              "AssumeRolePolicyDocument": {
                 "Version" : "2012-10-17",
                 "Statement": [ {
                    "Effect": "Allow",
                    "Principal": {
                       "Service": [ "ec2.amazonaws.com" ]
                    },
                    "Action": [ "sts:AssumeRole" ]
                 } ]
              },
              "Path": "/"
           }
    },

    "ec2tagemanagementiampolicy" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description" : "Policy to allow EC2 Instances be able to read and change tags",
        "Path" : "/",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "Stmt1461918640000",
                    "Effect": "Allow",
                    "Action": [
                        "ec2:CreateTags",
                        "ec2:DeleteTags",
                        "ec2:Describe*"
                    ],
                    "Resource": [
                        "*"
                    ]
                }
            ]
        },
        "Roles" : [ { "Ref" : "EC2DefaultRole" } ]
      }
    },

    "r53iampolicy" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description" : "Policy to allow EC2 Instances be able to register with R53",
        "Path" : "/",
        "PolicyDocument" : {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "Stmt1461918487000",
                    "Effect": "Allow",
                    "Action": [
                        "route53:ChangeResourceRecordSets",
                        "route53:ChangeTagsForResource",
                        "route53:CreateHealthCheck",
                        "route53:CreateReusableDelegationSet",
                        "route53:CreateTrafficPolicy",
                        "route53:CreateTrafficPolicyInstance",
                        "route53:CreateTrafficPolicyVersion",
                        "route53:DeleteHealthCheck",
                        "route53:DeleteReusableDelegationSet",
                        "route53:DeleteTrafficPolicy",
                        "route53:DeleteTrafficPolicyInstance",
                        "route53:Get*",
                        "route53:List*",
                        "route53:Update*"
                    ],
                    "Resource": [
                        "*"
                    ]
                }
            ]
        },
        "Roles" : [ { "Ref" : "EC2DefaultRole" } ]
      }
    },

    "S3iampolicy" : {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description" : "Policy to allow EC2 Instances be able to Work with S3 bucket cc-syslogs",
        "Path" : "/",
        "PolicyDocument" : {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                          "Sid": "Stmt1475490813000",
                          "Effect": "Allow",
                          "Action": [
                              "s3:*"
                          ],
                          "Resource": [
                              "arn:aws:s3::: cc-syslogs/"
                          ]
                      },
                      {
                          "Sid": "Stmt1475490917000",
                          "Effect": "Allow",
                          "Action": [
                              "s3:*"
                          ],
                          "Resource": [
                              "arn:aws:s3::: cc-syslogs/*"
                          ]
                      }
                  ]
        },
        "Roles" : [ { "Ref" : "EC2DefaultRole" } ]
      }
    },

      "EC2DefaultInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "EC2DefaultRole"
            } ]
         }
      },

    "INTHostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
          "HostedZoneConfig": {
            "Comment": { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]}," ",{ "Fn::FindInMap" : [ "VPCInfo", "INTDomainName", "Name" ]}, " internal domain created by CloudFormation"]]} },
          "HostedZoneTags": [
            { "Key" : "Name", "Value" :  { "Fn::Join" : ["", [{ "Fn::FindInMap" : [ "VPCInfo", "INTDomainName", "Name" ]}, " internal domain for the VPC." ]]} },
            { "Key" : "Theater", "Value" :  { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]} },
            { "Key" : "CostCenter", "Value" :  { "Fn::FindInMap" : [ "Tagging", "CostCenter", "Name" ]} }
          ],
          "Name": { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"},".", { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]},".", {"Fn::FindInMap" : [ "VPCInfo", "INTDomainName", "Name" ]}]] } ,
          "VPCs" : [ {
            "VPCId": {"Ref" : "PRDVPC"} ,
            "VPCRegion": { "Ref" : "AWS::Region"}
            },
            {
              "VPCId": {"Ref" : "DOVPC"} ,
              "VPCRegion": { "Ref" : "AWS::Region"}
            }
            ]
        }
      }


    },
     "Outputs" : {
      "prdvpcid" : {
        "Description" : "VPCId of the newly created Production VPC",
        "Value" :  { "Ref" : "PRDVPC" }
      },
      "prdappsubnetid1" : {
        "Description" : "SubnetId of the Production app subnet az1",
        "Value" :  { "Ref" : "PRDAppSubnet1" }
      },
      "prdappsubnetid2" : {
        "Description" : "SubnetId of the Production app subnet az2",
        "Value" :  { "Ref" : "PRDAppSubnet2" }
      },
      "prdappsubnetid1prefix" : {
        "Description" : "CIDR of the Production app subnet az1",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet1", "CIDR" ]}
      },
      "prdappsubnetid2prefix" : {
        "Description" : "CIDR of the Production app subnet az2",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "PRDAppSubnet2", "CIDR" ]}
      },
      "prdprivsubnetid1" : {
        "Description" : "SubnetId of the Production Priv subnet",
        "Value" :  { "Ref" : "PRDPrivSubnet1" }
      },
      "prdprivsubnetid2" : {
        "Description" : "SubnetId of the Production Priv subnet",
        "Value" :  { "Ref" : "PRDPrivSubnet2" }
      },
      "prdprivsubnetid1prefix" : {
        "Description" : "CIDR of the Production Priv subnet az1",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet1", "CIDR" ]}
      },
      "prdprivsubnetid2prefix" : {
        "Description" : "CIDR of the Production Priv subnet az2",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "PRDPrivSubnet2", "CIDR" ]}
      },
      "prdpubsubnetid1" : {
        "Description" : "SubnetId of the Production pub subnet",
        "Value" :  { "Ref" : "PRDPubSubnet1" }
      },
      "prdpubsubnetid2" : {
        "Description" : "SubnetId of the Production pub subnet",
        "Value" :  { "Ref" : "PRDPubSubnet2" }
      },
      "prdpubsubnetid1prefix" : {
        "Description" : "CIDR of the Production pub subnet az1",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "PRDPubSubnet1", "CIDR" ]}
      },
      "prdpubsubnetid2prefix" : {
        "Description" : "CIDR of the Production pub subnet az2",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "PRDPubSubnet2", "CIDR" ]}
      },
      "prdawsaz1" : {
        "Value" : { "Fn::FindInMap" : [ "VPCInfo", "AZ1", "AZ" ]} ,
        "Description" : "Production Availability Zone AZ1"
      },
      "prdawsaz2" : {
        "Value" : { "Fn::FindInMap" : [ "VPCInfo", "AZ2", "AZ" ]} ,
        "Description" : "Production Availability Zone AZ2"
      },

      "prdintrouteaz1" : {
        "Value" : { "Ref" : "PRDIntRouteTable1" },
        "Description" : "Production Route Table INT AZ1"
      },

      "prdintrouteaz2" : {
        "Value" : { "Ref" : "PRDIntRouteTable2" },
        "Description" : "Production Route Table INT AZ2"
      },

      "prdPubextrouteaz1" : {
        "Value" : { "Ref" : "PRDPubExtRouteTable1" },
        "Description" : "Production Route Table Pub Ext AZ1"
      },

      "prdPubextrouteaz2" : {
        "Value" : { "Ref" : "PRDPubExtRouteTable2" },
        "Description" : "Production Route Table Pub Ext AZ2"
      },

      "prdsgdefault" : {
        "Value" : { "Ref" : "PRDSGDefault"} ,
        "Description" : "Production Default Security Group"
      },
      "prdsgcorp" : {
        "Value" : { "Ref" : "PRDVCCorpSSHsg"} ,
        "Description" : "Production Corproate Security Group"
      },
      "dovpcid" : {
        "Description" : "VPCId of the newly created DevOps VPC",
        "Value" :  { "Ref" : "DOVPC" }
      },

      "DOPubSubnetid1" : {
        "Description" : "SubnetId of the Default subnet az1",
        "Value" :  { "Ref" : "DOPubSubnet1" }
      },

      "DOPubSubnetid2" : {
        "Description" : "SubnetId of the Default subnet az2",
        "Value" :  { "Ref" : "DOPubSubnet2" }
      },

      "DOPubSubnetid1prefix" : {
        "Description" : "CIDR of the Default subnet az1",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "DOPubSubnet1", "CIDR" ]}
      },

      "DOPubSubnetid2prefix" : {
        "Description" : "CIDR of the Default subnet az2",
        "Value" :  { "Fn::FindInMap" : [ "VPCInfo", "DOPubSubnet2", "CIDR" ]}
      },

      "dodefaultrouteaz1" : {
        "Value" : { "Ref" : "DOPublicRouteTable" },
        "Description" : "Default Route Table Public"
      },

      "dosgdefault" : {
        "Value" : { "Ref" : "DOSGDefault"} ,
        "Description" : "Default Security Group"
      },
      "dosgcorp" : {
        "Value" : { "Ref" : "DOVCCorpSSHsg"} ,
        "Description" : "Default Corproate Security Group"
      },

      "inthostedzoneid" : {
        "Value" : { "Ref" : "INTHostedZone"} ,
        "Description" : "HostedZoneID for Internal Domain"
      },

      "inthostedzoneurl" : {
        "Value" : { "Fn::Join" : ["", [{ "Ref" : "AWS::Region"},".", { "Fn::FindInMap" : [ "Tagging", "Theater", "Name" ]},".", {"Fn::FindInMap" : [ "VPCInfo", "INTDomainName", "Name" ]}]] } ,
        "Description" : "URL for this stacks internal domain"
      },

      "prdhostedzoneid" : {
        "Value" : { "Fn::FindInMap" : [ "VPCInfo", "PRDHostedZneID", "Name"]},
        "Description" : "HostedZonedId for Production"
      },
      "prdhostedzoneurl" : {
        "Value" : { "Fn::FindInMap" : [ "VPCInfo", "PRDDomainName", "Name" ]},
        "Description" : "URL for this stacks external Production"
      },
      "ec2defaultiam" : {
        "Value" : {"Fn::GetAtt" : ["EC2DefaultRole", "Arn"] },
        "Description" : "EC2Default IAM Role"
      }

    }
  }
